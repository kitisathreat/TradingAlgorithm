files:
  "/etc/nginx/conf.d/proxy.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # Main proxy configuration for Flask app with Socket.IO support
      
      # Socket.IO specific configuration
      map $http_upgrade $connection_upgrade {
          default upgrade;
          '' close;
      }
      
      # Upstream backend
      upstream backend {
          server 127.0.0.1:8000;
          keepalive 32;
      }
      
      # Main server configuration
      server {
          listen 80;
          server_name _;
          
          # Increase client body size for file uploads
          client_max_body_size 10M;
          
          # Socket.IO specific location
          location /socket.io/ {
              proxy_pass http://backend;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection $connection_upgrade;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              
              # WebSocket specific settings
              proxy_buffering off;
              proxy_cache off;
              proxy_read_timeout 86400;
              proxy_send_timeout 86400;
              proxy_connect_timeout 60;
              
              # CORS headers
              add_header Access-Control-Allow-Origin * always;
              add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
              add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
              add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
              
              # Handle preflight requests
              if ($request_method = 'OPTIONS') {
                  add_header Access-Control-Allow-Origin *;
                  add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                  add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                  add_header Access-Control-Max-Age 1728000;
                  add_header Content-Type 'text/plain; charset=utf-8';
                  add_header Content-Length 0;
                  return 204;
              }
          }
          
          # API routes
          location /api/ {
              proxy_pass http://backend;
              proxy_http_version 1.1;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              
              # CORS headers
              add_header Access-Control-Allow-Origin * always;
              add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
              add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
          }
          
          # Static files
          location /static/ {
              alias /var/app/current/static/;
              expires 1y;
              add_header Cache-Control "public, immutable";
          }
          
          # Main application
          location / {
              proxy_pass http://backend;
              proxy_http_version 1.1;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              
              # Standard proxy settings
              proxy_buffering on;
              proxy_buffer_size 128k;
              proxy_buffers 4 256k;
              proxy_busy_buffers_size 256k;
              
              # Timeout settings
              proxy_read_timeout 60;
              proxy_send_timeout 60;
              proxy_connect_timeout 60;
          }
          
          # Health check endpoint
          location /health {
              access_log off;
              return 200 "healthy\n";
              add_header Content-Type text/plain;
          }
      }

container_commands:
  01_remove_default_nginx:
    command: "rm -f /etc/nginx/conf.d/default.conf"
  02_reload_nginx:
    command: "service nginx reload" 